{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailfilippenko/dev/table/src/components/table/table-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TableCell as TableCellMui } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport StatusBadge from '../status-badge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    table_cell: {\n      border: '1px solid #E3E6EC',\n      maxWidth: '250px',\n      cursor: 'pointer',\n      [theme.breakpoints.down('md')]: {\n        backgroundColor: 'red'\n      }\n    },\n    first_text: {\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\"\n    },\n    secondary_text: {\n      color: '#908f8f',\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\"\n    }\n  };\n});\n\nfunction TableCell(_ref2) {\n  _s();\n\n  let {\n    text,\n    secondaryText,\n    status\n  } = _ref2;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(TableCellMui, {\n    className: classes.table_cell,\n    children: [text && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.first_text,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }, this), secondaryText && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.secondary_text,\n      children: secondaryText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }, this), status && /*#__PURE__*/_jsxDEV(StatusBadge, {\n      status: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TableCell, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TableCell;\nexport default TableCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCell\");","map":{"version":3,"names":["React","TableCell","TableCellMui","makeStyles","StatusBadge","useStyles","theme","table_cell","border","maxWidth","cursor","breakpoints","down","backgroundColor","first_text","whiteSpace","overflow","textOverflow","secondary_text","color","text","secondaryText","status","classes"],"sources":["/Users/mikhailfilippenko/dev/table/src/components/table/table-cell.tsx"],"sourcesContent":["import React from 'react';\n\nimport { TableCell as TableCellMui } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nimport { statusType } from '../../store/types';\nimport StatusBadge from '../status-badge';\n\nconst useStyles = makeStyles(({ theme }) => ({\n    table_cell: {\n        border: '1px solid #E3E6EC',\n        maxWidth: '250px',\n        cursor: 'pointer',\n\n        [theme.breakpoints.down('md')]: {\n            backgroundColor: 'red',\n        },\n    },\n\n    first_text: {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    },\n\n    secondary_text: {\n        color: '#908f8f',\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\"\n    },\n}));\n\ninterface TableCellProps {\n    text?: string | number;\n    secondaryText?: string;\n    status?: statusType;\n}\n\nfunction TableCell({ text, secondaryText, status }: TableCellProps): React.ReactElement {\n    const classes = useStyles();\n\n\n    return <TableCellMui className={classes.table_cell}>\n        {text && <p className={classes.first_text}>{text}</p>}\n        {secondaryText && <p className={classes.secondary_text}>{secondaryText}</p>}\n        {status && <StatusBadge status={status} />}\n    </TableCellMui>\n}\n\nexport default TableCell"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAS,IAAIC,YAAtB,QAA0C,eAA1C;AACA,SAASC,UAAT,QAA2B,aAA3B;AAGA,OAAOC,WAAP,MAAwB,iBAAxB;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;EAAA,IAAC;IAAEG;EAAF,CAAD;EAAA,OAAgB;IACzCC,UAAU,EAAE;MACRC,MAAM,EAAE,mBADA;MAERC,QAAQ,EAAE,OAFF;MAGRC,MAAM,EAAE,SAHA;MAKR,CAACJ,KAAK,CAACK,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;QAC5BC,eAAe,EAAE;MADW;IALxB,CAD6B;IAWzCC,UAAU,EAAE;MACRC,UAAU,EAAE,QADJ;MAERC,QAAQ,EAAE,QAFF;MAGRC,YAAY,EAAE;IAHN,CAX6B;IAiBzCC,cAAc,EAAE;MACZC,KAAK,EAAE,SADK;MAEZJ,UAAU,EAAE,QAFA;MAGZC,QAAQ,EAAE,QAHE;MAIZC,YAAY,EAAE;IAJF;EAjByB,CAAhB;AAAA,CAAD,CAA5B;;AA+BA,SAAShB,SAAT,QAAwF;EAAA;;EAAA,IAArE;IAAEmB,IAAF;IAAQC,aAAR;IAAuBC;EAAvB,CAAqE;EACpF,MAAMC,OAAO,GAAGlB,SAAS,EAAzB;EAGA,oBAAO,QAAC,YAAD;IAAc,SAAS,EAAEkB,OAAO,CAAChB,UAAjC;IAAA,WACFa,IAAI,iBAAI;MAAG,SAAS,EAAEG,OAAO,CAACT,UAAtB;MAAA,UAAmCM;IAAnC;MAAA;MAAA;MAAA;IAAA,QADN,EAEFC,aAAa,iBAAI;MAAG,SAAS,EAAEE,OAAO,CAACL,cAAtB;MAAA,UAAuCG;IAAvC;MAAA;MAAA;MAAA;IAAA,QAFf,EAGFC,MAAM,iBAAI,QAAC,WAAD;MAAa,MAAM,EAAEA;IAArB;MAAA;MAAA;MAAA;IAAA,QAHR;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAKH;;GATQrB,S;UACWI,S;;;KADXJ,S;AAWT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}