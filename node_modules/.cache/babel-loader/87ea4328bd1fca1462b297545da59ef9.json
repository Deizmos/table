{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailfilippenko/dev/test-table/src/components/table-head.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TableCell, TableHead as TableHeadMui, TableRow } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport ArrowIcon from '../assets/icons/arrow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  head: {\n    backgroundColor: '#474955',\n    width: 1077\n  },\n  row: {\n    borderStyle: 'none',\n    background: '#474955',\n    '& .MuiTableCell-head': {\n      color: 'white',\n      background: '#474955'\n    }\n  },\n  row_id: {\n    width: 50\n  },\n  row_title: {\n    width: 300\n  }\n});\n\nfunction TableHead(_ref) {\n  _s();\n\n  let {\n    sortInfo,\n    setSortInfo\n  } = _ref;\n  const navigate = useNavigate();\n  const classes = useStyles();\n  /**\n   * Функция которая записывает в переменную sortInfo данные о стобце и типе сортировки\n   * @param column - название столбца для сортировки\n   */\n\n  const handleSortData = column => {\n    if (sortInfo.column === column) {\n      setSortInfo(sort => ({\n        column,\n        direction: sort.direction === 'asc' ? 'desc' : 'asc'\n      }));\n    } else {\n      setSortInfo(() => ({\n        column,\n        direction: 'asc'\n      }));\n    }\n\n    navigate('/1');\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHeadMui, {\n    className: classes.head,\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.row,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.row_id,\n        children: [\"ID\", /*#__PURE__*/_jsxDEV(ArrowIcon, {\n          direction: sortInfo.column === 'id' ? sortInfo.direction : undefined,\n          onClick: () => handleSortData('id')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.row_title,\n        children: [\"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\", /*#__PURE__*/_jsxDEV(ArrowIcon, {\n          direction: sortInfo.column === 'title' ? sortInfo.direction : undefined,\n          onClick: () => handleSortData('title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\", /*#__PURE__*/_jsxDEV(ArrowIcon, {\n          direction: sortInfo.column === 'body' ? sortInfo.direction : undefined,\n          onClick: () => handleSortData('body')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableHead, \"z0ah4AylfHkdJXTlHiRjkfX0wfY=\", false, function () {\n  return [useNavigate, useStyles];\n});\n\n_c = TableHead;\nexport default TableHead;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableHead\");","map":{"version":3,"names":["React","useNavigate","TableCell","TableHead","TableHeadMui","TableRow","makeStyles","ArrowIcon","useStyles","head","backgroundColor","width","row","borderStyle","background","color","row_id","row_title","sortInfo","setSortInfo","navigate","classes","handleSortData","column","sort","direction","undefined"],"sources":["/Users/mikhailfilippenko/dev/test-table/src/components/table-head.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useNavigate } from 'react-router-dom';\n\nimport {\n  TableCell,\n  TableHead as TableHeadMui,\n  TableRow,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nimport ArrowIcon from '../assets/icons/arrow';\nimport {\n  columnName,\n  sortInfoType,\n} from '../store/types';\n\nconst useStyles = makeStyles({\n    head: {\n        backgroundColor: '#474955',\n        width: 1077,\n    },\n\n    row: {\n        borderStyle: 'none',\n        background: '#474955',\n\n        '& .MuiTableCell-head': {\n            color: 'white',\n            background: '#474955',\n        },\n    },\n\n    row_id: {\n        width: 50,\n    },\n\n    row_title: {\n        width: 300,\n    },\n});\n\ninterface TableHeadProps {\n    sortInfo: sortInfoType;\n    setSortInfo: React.Dispatch<React.SetStateAction<sortInfoType>>;\n}\n\n\nfunction TableHead({ sortInfo, setSortInfo }: TableHeadProps): React.ReactElement {\n    const navigate = useNavigate();\n    const classes = useStyles();\n\n    /**\n     * Функция которая записывает в переменную sortInfo данные о стобце и типе сортировки\n     * @param column - название столбца для сортировки\n     */\n    const handleSortData = (column: columnName) => {\n        if (sortInfo.column === column) {\n            setSortInfo((sort) => ({\n                column,\n                direction: sort.direction === 'asc' ? 'desc' : 'asc'\n            }))\n        } else {\n            setSortInfo(() => ({\n                column,\n                direction: 'asc'\n            }))\n        }\n        navigate('/1')\n    }\n\n    return (\n        <TableHeadMui className={classes.head}>\n            <TableRow className={classes.row}>\n                <TableCell className={classes.row_id}>\n                    ID\n                    <ArrowIcon\n                        direction={sortInfo.column === 'id' ? sortInfo.direction : undefined}\n                        onClick={() => handleSortData('id')}\n                    />\n                </TableCell>\n                <TableCell className={classes.row_title}>\n                    Заголовок\n                    <ArrowIcon\n                        direction={sortInfo.column === 'title' ? sortInfo.direction : undefined}\n                        onClick={() => handleSortData('title')}\n                    />\n                </TableCell>\n                <TableCell >\n                    Описание\n                    <ArrowIcon\n                        direction={sortInfo.column === 'body' ? sortInfo.direction : undefined}\n                        onClick={() => handleSortData('body')}\n                    />\n                </TableCell>\n            </TableRow>\n        </TableHeadMui>\n    );\n}\n\nexport default TableHead;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SACEC,SADF,EAEEC,SAAS,IAAIC,YAFf,EAGEC,QAHF,QAIO,eAJP;AAKA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;;AAMA,MAAMC,SAAS,GAAGF,UAAU,CAAC;EACzBG,IAAI,EAAE;IACFC,eAAe,EAAE,SADf;IAEFC,KAAK,EAAE;EAFL,CADmB;EAMzBC,GAAG,EAAE;IACDC,WAAW,EAAE,MADZ;IAEDC,UAAU,EAAE,SAFX;IAID,wBAAwB;MACpBC,KAAK,EAAE,OADa;MAEpBD,UAAU,EAAE;IAFQ;EAJvB,CANoB;EAgBzBE,MAAM,EAAE;IACJL,KAAK,EAAE;EADH,CAhBiB;EAoBzBM,SAAS,EAAE;IACPN,KAAK,EAAE;EADA;AApBc,CAAD,CAA5B;;AA+BA,SAASR,SAAT,OAAkF;EAAA;;EAAA,IAA/D;IAAEe,QAAF;IAAYC;EAAZ,CAA+D;EAC9E,MAAMC,QAAQ,GAAGnB,WAAW,EAA5B;EACA,MAAMoB,OAAO,GAAGb,SAAS,EAAzB;EAEA;AACJ;AACA;AACA;;EACI,MAAMc,cAAc,GAAIC,MAAD,IAAwB;IAC3C,IAAIL,QAAQ,CAACK,MAAT,KAAoBA,MAAxB,EAAgC;MAC5BJ,WAAW,CAAEK,IAAD,KAAW;QACnBD,MADmB;QAEnBE,SAAS,EAAED,IAAI,CAACC,SAAL,KAAmB,KAAnB,GAA2B,MAA3B,GAAoC;MAF5B,CAAX,CAAD,CAAX;IAIH,CALD,MAKO;MACHN,WAAW,CAAC,OAAO;QACfI,MADe;QAEfE,SAAS,EAAE;MAFI,CAAP,CAAD,CAAX;IAIH;;IACDL,QAAQ,CAAC,IAAD,CAAR;EACH,CAbD;;EAeA,oBACI,QAAC,YAAD;IAAc,SAAS,EAAEC,OAAO,CAACZ,IAAjC;IAAA,uBACI,QAAC,QAAD;MAAU,SAAS,EAAEY,OAAO,CAACT,GAA7B;MAAA,wBACI,QAAC,SAAD;QAAW,SAAS,EAAES,OAAO,CAACL,MAA9B;QAAA,8BAEI,QAAC,SAAD;UACI,SAAS,EAAEE,QAAQ,CAACK,MAAT,KAAoB,IAApB,GAA2BL,QAAQ,CAACO,SAApC,GAAgDC,SAD/D;UAEI,OAAO,EAAE,MAAMJ,cAAc,CAAC,IAAD;QAFjC;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAQI,QAAC,SAAD;QAAW,SAAS,EAAED,OAAO,CAACJ,SAA9B;QAAA,kFAEI,QAAC,SAAD;UACI,SAAS,EAAEC,QAAQ,CAACK,MAAT,KAAoB,OAApB,GAA8BL,QAAQ,CAACO,SAAvC,GAAmDC,SADlE;UAEI,OAAO,EAAE,MAAMJ,cAAc,CAAC,OAAD;QAFjC;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QARJ,eAeI,QAAC,SAAD;QAAA,4EAEI,QAAC,SAAD;UACI,SAAS,EAAEJ,QAAQ,CAACK,MAAT,KAAoB,MAApB,GAA6BL,QAAQ,CAACO,SAAtC,GAAkDC,SADjE;UAEI,OAAO,EAAE,MAAMJ,cAAc,CAAC,MAAD;QAFjC;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAfJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA2BH;;GAlDQnB,S;UACYF,W,EACDO,S;;;KAFXL,S;AAoDT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}