{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailfilippenko/dev/table/src/components/table/table-head.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TableCell, TableHead as TableHeadMui, TableRow } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  head: {\n    backgroundColor: '#474955'\n  },\n  row: {\n    borderStyle: 'none',\n    background: '#474955',\n    '& .MuiTableCell-head': {\n      color: 'white',\n      background: '#474955'\n    }\n  },\n  column: {\n    maxWidth: '250px'\n  }\n});\n\nfunction TableHead(_ref) {\n  _s();\n\n  let {\n    sortInfo,\n    setSortInfo\n  } = _ref;\n  const navigate = useNavigate();\n  const classes = useStyles();\n  /**\n   * Функция которая записывает в переменную sortInfo данные о столбце и типе сортировки\n   * @param column - название столбца для сортировки\n   */\n\n  const handleSortData = column => {\n    if (sortInfo.column === column) {\n      setSortInfo(sort => ({\n        column,\n        direction: sort.direction === 'asc' ? 'desc' : 'asc'\n      }));\n    } else {\n      setSortInfo(() => ({\n        column,\n        direction: 'asc'\n      }));\n    }\n\n    navigate('/1');\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHeadMui, {\n    className: classes.head,\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.row,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.column,\n        children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 / \\u0414\\u0430\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.column,\n        children: \"\\u0422\\u0438\\u043F \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F / \\u0410\\u0432\\u0442\\u043E\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.column,\n        children: \"\\u0410\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442 / \\u0422\\u0435\\u0440\\u043C\\u0438\\u043D\\u0430\\u043B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.column,\n        children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableHead, \"z0ah4AylfHkdJXTlHiRjkfX0wfY=\", false, function () {\n  return [useNavigate, useStyles];\n});\n\n_c = TableHead;\nexport default TableHead;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableHead\");","map":{"version":3,"names":["React","useNavigate","TableCell","TableHead","TableHeadMui","TableRow","makeStyles","useStyles","head","backgroundColor","row","borderStyle","background","color","column","maxWidth","sortInfo","setSortInfo","navigate","classes","handleSortData","sort","direction"],"sources":["/Users/mikhailfilippenko/dev/table/src/components/table/table-head.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useNavigate } from 'react-router-dom';\n\nimport {\n  TableCell,\n  TableHead as TableHeadMui,\n  TableRow,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nimport {\n  columnName,\n  sortInfoType,\n} from '../../store/types';\n\nconst useStyles = makeStyles({\n    head: {\n        backgroundColor: '#474955',\n    },\n\n    row: {\n        borderStyle: 'none',\n        background: '#474955',\n\n        '& .MuiTableCell-head': {\n            color: 'white',\n            background: '#474955',\n        },\n    },\n\n    column: {\n        maxWidth: '250px',\n    },\n\n});\n\ninterface TableHeadProps {\n    sortInfo: sortInfoType;\n    setSortInfo: React.Dispatch<React.SetStateAction<sortInfoType>>;\n}\n\n\nfunction TableHead({ sortInfo, setSortInfo }: TableHeadProps): React.ReactElement {\n    const navigate = useNavigate();\n    const classes = useStyles();\n\n    /**\n     * Функция которая записывает в переменную sortInfo данные о столбце и типе сортировки\n     * @param column - название столбца для сортировки\n     */\n    const handleSortData = (column: columnName) => {\n        if (sortInfo.column === column) {\n            setSortInfo((sort) => ({\n                column,\n                direction: sort.direction === 'asc' ? 'desc' : 'asc'\n            }))\n        } else {\n            setSortInfo(() => ({\n                column,\n                direction: 'asc'\n            }))\n        }\n        navigate('/1')\n    }\n\n    return (\n        <TableHeadMui className={classes.head}>\n            <TableRow className={classes.row}>\n                <TableCell className={classes.column}>\n                    Номер / Дата\n                </TableCell>\n                <TableCell className={classes.column}>\n                    Тип задания / Автор\n                </TableCell>\n                <TableCell className={classes.column}>\n                    Аккаунт / Терминал\n                </TableCell>\n                <TableCell className={classes.column}>\n                    Статус\n                </TableCell>\n            </TableRow>\n        </TableHeadMui >\n    );\n}\n\nexport default TableHead;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SACEC,SADF,EAEEC,SAAS,IAAIC,YAFf,EAGEC,QAHF,QAIO,eAJP;AAKA,SAASC,UAAT,QAA2B,aAA3B;;AAOA,MAAMC,SAAS,GAAGD,UAAU,CAAC;EACzBE,IAAI,EAAE;IACFC,eAAe,EAAE;EADf,CADmB;EAKzBC,GAAG,EAAE;IACDC,WAAW,EAAE,MADZ;IAEDC,UAAU,EAAE,SAFX;IAID,wBAAwB;MACpBC,KAAK,EAAE,OADa;MAEpBD,UAAU,EAAE;IAFQ;EAJvB,CALoB;EAezBE,MAAM,EAAE;IACJC,QAAQ,EAAE;EADN;AAfiB,CAAD,CAA5B;;AA2BA,SAASZ,SAAT,OAAkF;EAAA;;EAAA,IAA/D;IAAEa,QAAF;IAAYC;EAAZ,CAA+D;EAC9E,MAAMC,QAAQ,GAAGjB,WAAW,EAA5B;EACA,MAAMkB,OAAO,GAAGZ,SAAS,EAAzB;EAEA;AACJ;AACA;AACA;;EACI,MAAMa,cAAc,GAAIN,MAAD,IAAwB;IAC3C,IAAIE,QAAQ,CAACF,MAAT,KAAoBA,MAAxB,EAAgC;MAC5BG,WAAW,CAAEI,IAAD,KAAW;QACnBP,MADmB;QAEnBQ,SAAS,EAAED,IAAI,CAACC,SAAL,KAAmB,KAAnB,GAA2B,MAA3B,GAAoC;MAF5B,CAAX,CAAD,CAAX;IAIH,CALD,MAKO;MACHL,WAAW,CAAC,OAAO;QACfH,MADe;QAEfQ,SAAS,EAAE;MAFI,CAAP,CAAD,CAAX;IAIH;;IACDJ,QAAQ,CAAC,IAAD,CAAR;EACH,CAbD;;EAeA,oBACI,QAAC,YAAD;IAAc,SAAS,EAAEC,OAAO,CAACX,IAAjC;IAAA,uBACI,QAAC,QAAD;MAAU,SAAS,EAAEW,OAAO,CAACT,GAA7B;MAAA,wBACI,QAAC,SAAD;QAAW,SAAS,EAAES,OAAO,CAACL,MAA9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAII,QAAC,SAAD;QAAW,SAAS,EAAEK,OAAO,CAACL,MAA9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eAOI,QAAC,SAAD;QAAW,SAAS,EAAEK,OAAO,CAACL,MAA9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPJ,eAUI,QAAC,SAAD;QAAW,SAAS,EAAEK,OAAO,CAACL,MAA9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GAzCQX,S;UACYF,W,EACDM,S;;;KAFXJ,S;AA2CT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}