{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailfilippenko/dev/table/src/components/table/table-body.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { CircularProgress, TableBody as TableBodyMui, TableRow } from '@mui/material';\nimport TableCell from '../table/table-cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TableBody() {\n  _s();\n\n  const navigate = useNavigate();\n  const tableData = useSelector(state => state.tableData.data);\n  const isLoading = useSelector(state => state.tableData.isLoading);\n  return /*#__PURE__*/_jsxDEV(TableBodyMui, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 27\n    }, this), !isLoading && !!tableData.length && tableData.map(_ref => {\n      let {\n        id,\n        created_date,\n        order_type,\n        account,\n        created_user,\n        terminal,\n        status\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        onClick: () => {\n          navigate(`/${id}`);\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          text: id,\n          secondaryText: moment(created_date).format('DD.MM.yyyy HH:mm')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          text: order_type === null || order_type === void 0 ? void 0 : order_type.name,\n          secondaryText: `${created_user === null || created_user === void 0 ? void 0 : created_user.surname} ${created_user === null || created_user === void 0 ? void 0 : created_user.name[0]}. ${created_user === null || created_user === void 0 ? void 0 : created_user.patronymic[0]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          text: account === null || account === void 0 ? void 0 : account.name,\n          secondaryText: terminal === null || terminal === void 0 ? void 0 : terminal.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          status: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 38\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableBody, \"kHRcwGCD75eVrIcDCEKeDMTUD6M=\", false, function () {\n  return [useNavigate, useSelector, useSelector];\n});\n\n_c = TableBody;\nexport default TableBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableBody\");","map":{"version":3,"names":["React","moment","useSelector","useNavigate","CircularProgress","TableBody","TableBodyMui","TableRow","TableCell","navigate","tableData","state","data","isLoading","length","map","id","created_date","order_type","account","created_user","terminal","status","format","name","surname","patronymic"],"sources":["/Users/mikhailfilippenko/dev/table/src/components/table/table-body.tsx"],"sourcesContent":["import React from 'react';\n\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\n\nimport {\n  CircularProgress,\n  TableBody as TableBodyMui,\n  TableRow,\n} from '@mui/material';\n\nimport { RootState } from '../../store/store';\nimport { tableDataType } from '../../store/types';\nimport TableCell from '../table/table-cell';\n\nfunction TableBody(): React.ReactElement {\n    const navigate = useNavigate()\n    const tableData = useSelector((state: RootState) => state.tableData.data)\n    const isLoading = useSelector((state: RootState) => state.tableData.isLoading)\n\n    return (\n        <TableBodyMui>\n            {isLoading && <CircularProgress />}\n            {!isLoading && !!tableData.length &&\n                tableData.map(({\n                    id,\n                    created_date,\n                    order_type,\n                    account,\n                    created_user,\n                    terminal,\n                    status,\n                }: tableDataType) => <TableRow key={id} onClick={() => { navigate(`/${id}`) }}>\n                        <TableCell\n                            text={id}\n                            secondaryText={moment(created_date).format('DD.MM.yyyy HH:mm')}\n                        />\n                        <TableCell\n                            text={order_type?.name}\n                            secondaryText={`${created_user?.surname} ${created_user?.name[0]}. ${created_user?.patronymic[0]}`}\n                        />\n                        <TableCell\n                            text={account?.name}\n                            secondaryText={terminal?.name}\n                        />\n                        <TableCell status={status} />\n                    </TableRow>)}\n        </TableBodyMui>\n    );\n}\n\nexport default TableBody"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,SACEC,gBADF,EAEEC,SAAS,IAAIC,YAFf,EAGEC,QAHF,QAIO,eAJP;AAQA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,SAASH,SAAT,GAAyC;EAAA;;EACrC,MAAMI,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAMO,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAsBA,KAAK,CAACD,SAAN,CAAgBE,IAAvC,CAA7B;EACA,MAAMC,SAAS,GAAGX,WAAW,CAAES,KAAD,IAAsBA,KAAK,CAACD,SAAN,CAAgBG,SAAvC,CAA7B;EAEA,oBACI,QAAC,YAAD;IAAA,WACKA,SAAS,iBAAI,QAAC,gBAAD;MAAA;MAAA;MAAA;IAAA,QADlB,EAEK,CAACA,SAAD,IAAc,CAAC,CAACH,SAAS,CAACI,MAA1B,IACGJ,SAAS,CAACK,GAAV,CAAc;MAAA,IAAC;QACXC,EADW;QAEXC,YAFW;QAGXC,UAHW;QAIXC,OAJW;QAKXC,YALW;QAMXC,QANW;QAOXC;MAPW,CAAD;MAAA,oBAQO,QAAC,QAAD;QAAmB,OAAO,EAAE,MAAM;UAAEb,QAAQ,CAAE,IAAGO,EAAG,EAAR,CAAR;QAAoB,CAAxD;QAAA,wBACb,QAAC,SAAD;UACI,IAAI,EAAEA,EADV;UAEI,aAAa,EAAEf,MAAM,CAACgB,YAAD,CAAN,CAAqBM,MAArB,CAA4B,kBAA5B;QAFnB;UAAA;UAAA;UAAA;QAAA,QADa,eAKb,QAAC,SAAD;UACI,IAAI,EAAEL,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEM,IADtB;UAEI,aAAa,EAAG,GAAEJ,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEK,OAAQ,IAAGL,YAA5B,aAA4BA,YAA5B,uBAA4BA,YAAY,CAAEI,IAAd,CAAmB,CAAnB,CAAsB,KAAIJ,YAAtD,aAAsDA,YAAtD,uBAAsDA,YAAY,CAAEM,UAAd,CAAyB,CAAzB,CAA4B;QAFrG;UAAA;UAAA;UAAA;QAAA,QALa,eASb,QAAC,SAAD;UACI,IAAI,EAAEP,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEK,IADnB;UAEI,aAAa,EAAEH,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEG;QAF7B;UAAA;UAAA;UAAA;QAAA,QATa,eAab,QAAC,SAAD;UAAW,MAAM,EAAEF;QAAnB;UAAA;UAAA;UAAA;QAAA,QAba;MAAA,GAAeN,EAAf;QAAA;QAAA;QAAA;MAAA,QARP;IAAA,CAAd,CAHR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA6BH;;GAlCQX,S;UACYF,W,EACCD,W,EACAA,W;;;KAHbG,S;AAoCT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}